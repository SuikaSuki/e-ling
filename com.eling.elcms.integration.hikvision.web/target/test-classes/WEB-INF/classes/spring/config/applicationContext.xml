<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd			
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd			
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd			
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache-3.1.xsd			 
	"
	default-autowire="byName" default-lazy-init="false">

	   <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- 数据源 -->
	<!-- <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
			<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>
	配置Jdbc模板
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	事务 
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression=" execution(* com.fwmvc.*.service..*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	 </tx:advice>
		-->
		<!-- SpringMVC 上传 对multipart解析器的配置-->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      	<property name="maxUploadSize" value="104857600"/>
        <property name="maxInMemorySize" value="4096"/>
  	</bean> -->
	<!-- <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="vedioTask" />
		<property name="targetMethod" value="vedioTask" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="simpleTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		see the example of method invoking job above
		<property name="jobDetail" ref="jobDetail" />
		10 seconds
		<property name="startDelay" value="5000" />
		repeat every 50 seconds
		<property name="repeatInterval" value="3000" />
	</bean>

	总调度用于启动Spring定时器
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean> -->
	<bean name="quartzJob" class="com.eling.elcms.video.timer.VedioTask" />
	<!-- <bean name="quartzJob" class="com.fwmvc.test2.Timer.Task" />   -->
	<bean id="quartzJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject">  
            <ref bean="quartzJob" />  
        </property>  
        <property name="targetMethod">  
            <value>execute</value>  
        </property>  
    </bean>  
    <bean id="quartzJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail">  
            <ref bean="quartzJobDetail" />  
        </property>  
        <!-- 每天10秒启动定时任务 -->
		<property name="cronExpression" value="0/60 * * * * ?" />
    </bean> 
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no">  
        <property name="triggers">  
            <list>  
                <ref local="quartzJobTrigger" />  
            </list>  
        </property>  
    </bean>
</beans>

